"use strict";(self.webpackChunkocto_develop_zone=self.webpackChunkocto_develop_zone||[]).push([[9365],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=r,h=m["".concat(p,".").concat(d)]||m[d]||c[d]||i;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4501:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const i={},o=void 0,s={unversionedId:"Implement Features/Metrics",id:"Implement Features/Metrics",title:"Metrics",description:"metric-sequence",source:"@site/docs/Implement Features/Metrics.md",sourceDirName:"Implement Features",slug:"/Implement Features/Metrics",permalink:"/Implement Features/Metrics",draft:!1,editUrl:"https://github.com/allxon/developer-zone/edit/master/docs/Implement Features/Metrics.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Alerts",permalink:"/Implement Features/Alerts"},next:{title:"Events",permalink:"/Implement Features/Events"}},p={},l=[{value:"Tutorials",id:"tutorials",level:2},{value:"Display Type",id:"display-type",level:2},{value:"Temperature",id:"temperature",level:3},{value:"Custom",id:"custom",level:3}],u={toc:l};function c(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"metric-sequence",src:n(9633).Z,width:"3196",height:"1214"})),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Metrics")," feature helps you to present information in a ",(0,r.kt)("strong",{parentName:"p"},"Charts")," card on the Portal, such as device temperature. The sequence flow is just the same as that of the ",(0,r.kt)("strong",{parentName:"p"},"States")," card."),(0,r.kt)("h2",{id:"tutorials"},"Tutorials"),(0,r.kt)("p",null,"Here is an example of creating the ",(0,r.kt)("strong",{parentName:"p"},"Charts")," card:"),(0,r.kt)("p",null,"First, send the following ",(0,r.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate")," JSON."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"{17-26}","{17-26}":!0},'{\n  "jsonrpc": "2.0",\n  "method": "v2/notifyPluginUpdate",\n  "params": {\n    "sdk": "${OCTO_SDK_VERSION}",\n    "appGUID": "${PLUGIN_APP_GUID}",\n    "appName": "${PLUGIN_NAME}",\n    "epoch": "",\n    "displayName": "plugIN Hello",\n    "type": "ib",\n    "version": "${PLUGIN_VERSION}",\n    "modules": [\n      {\n        "moduleName": "${PLUGIN_NAME}",\n        "displayName": "plugIN Hello",\n        "properties": [],\n        "metrics": [\n          {\n            "name": "cpu_temperature",\n            "displayName": "CPU Temperature",\n            "description": "Present CPU Temprature in chart.",\n            "displayCategory": "ChartCategory1",\n            "displayType": "temperature",\n            "displayUnit": "",\n            "value": ""\n          }\n        ]\n      }\n    ]\n  }\n}\n')),(0,r.kt)("p",null,"Once done, Allxon Portal shows the ",(0,r.kt)("strong",{parentName:"p"},"Charts")," card below. The diagram is empty because it's still in the initialization state."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"metric-init",src:n(9872).Z,width:"3349",height:"2173"})),(0,r.kt)("p",null,"Now you can send ",(0,r.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginMetric")," to upload data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "jsonrpc": "2.0",\n   "method": "v2/notifyPluginMetric",\n   "params": {\n      "appGUID": "${PLUGIN_APP_GUID}",\n      "moduleName": "${PLUGIN_NAME}",\n      "epoch": "",\n      "metrics": [\n         {\n            "name": "cpu_temperature",\n            "value": "298.15"\n         }\n      ]\n   }\n}\n')),(0,r.kt)("p",null,"While the ",(0,r.kt)("inlineCode",{parentName:"p"},'"value"')," is ",(0,r.kt)("inlineCode",{parentName:"p"},'\u201c298.15"')," in the code line above, why does the Charts card show 25",(0,r.kt)("sup",null,"o"),"C ? This is because Allxon Portal uses ",(0,r.kt)("strong",{parentName:"p"},"Kelvin")," as the unit of temperature if you select ",(0,r.kt)("inlineCode",{parentName:"p"},'"temperature"')," as the ",(0,r.kt)("inlineCode",{parentName:"p"},'"displayType"'),"."),(0,r.kt)("p",null,"You may curious why ",(0,r.kt)("inlineCode",{parentName:"p"},'"value"')," is ",(0,r.kt)("inlineCode",{parentName:"p"},'"298.5"'),", because if your ",(0,r.kt)("inlineCode",{parentName:"p"},'"displayType"')," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},'"temperature"'),", Allxon Portal would assume your ",(0,r.kt)("inlineCode",{parentName:"p"},'"value"')," unit is Kelvin."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Use this ",(0,r.kt)("a",{parentName:"p",href:"https://www.unitconverters.net/"},"unit converter")," to make sure you convert correctly between ",(0,r.kt)("em",{parentName:"p"},"Fahrenheit"),", ",(0,r.kt)("em",{parentName:"p"},"Celsius")," and ",(0,r.kt)("em",{parentName:"p"},"Kelvin"),".")),(0,r.kt)("p",null,"Below is an example of the ",(0,r.kt)("strong",{parentName:"p"},"Charts")," card::"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"metric-first-shot",src:n(9365).Z,width:"3314",height:"1729"}),"\nYou can continue to send the ",(0,r.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginMetric"),". The chart is updated accordingly."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"metric-second-shot",src:n(9183).Z,width:"603",height:"501"})),(0,r.kt)("h2",{id:"display-type"},"Display Type"),(0,r.kt)("p",null,"You can define the unit of the chart or use a predefined temperature scale. For how to set up the unit of a chart, see the following sections."),(0,r.kt)("h3",{id:"temperature"},"Temperature"),(0,r.kt)("p",null,"The following example shows the code in ",(0,r.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a temperature line graph with a predefined toggle button. The toggle button is used for switching between ",(0,r.kt)("sup",null,"o"),"F/",(0,r.kt)("sup",null,"o"),"C (Fahrenheit/ Celsius)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "metrics": [ \n        {\n            "name": "temperatureMetric",\n            "displayType": "temperature",\n            ...\n        },\n        ...\n    ]\n}\n')),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginMetrics.json")," is used to update the temperature metric, the ",(0,r.kt)("inlineCode",{parentName:"p"},'"name"')," must be identical to that in ",(0,r.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json"),", and the ",(0,r.kt)("inlineCode",{parentName:"p"},'"value"')," SHOULD be reported in ",(0,r.kt)("strong",{parentName:"p"},"Kelvin"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginMetric.json"',title:'"v2/notifyPluginMetric.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginMetric",\n    "params": {\n        ...\n        "metrics": [ \n            {\n                "name": "temperatureMetric",\n                "value": "298"\n            },\n            ...\n        ]\n    }\n}\n')),(0,r.kt)("p",null,"The Portal converts the metric unit from ",(0,r.kt)("strong",{parentName:"p"},"Kelvin")," to ",(0,r.kt)("strong",{parentName:"p"},"Fahrenheit")," and ",(0,r.kt)("strong",{parentName:"p"},"Celsius"),".\n",(0,r.kt)("img",{alt:"metric-display-type-temperature-exec",src:n(9199).Z,width:"1173",height:"315"})),(0,r.kt)("h3",{id:"custom"},"Custom"),(0,r.kt)("p",null,"The following example shows the code in ",(0,r.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a line graph with a custom unit. You must define ",(0,r.kt)("inlineCode",{parentName:"p"},'"displayUnit"')," as the unit of the metrics."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "metrics": [ \n        {\n            "name": "customMetric",\n            "displayType": "custom",\n            "displayUnit": "degree",\n            ...\n        },\n        ...\n    ]\n}\n')),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},'"v2/notifyPluginMetrics.json"')," is used to update the metric, the ",(0,r.kt)("inlineCode",{parentName:"p"},'"name"')," must be identical to that in ",(0,r.kt)("inlineCode",{parentName:"p"},'"v2/notifyPluginUpdate.json"'),", and the data type of ",(0,r.kt)("inlineCode",{parentName:"p"},'"value"')," must be ",(0,r.kt)("strong",{parentName:"p"},"String"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginMetric.json"',title:'"v2/notifyPluginMetric.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginMetric",\n    "params": {\n        ...\n        "metrics": [ \n            {\n                "name": "customMetric",\n                "value": "30"\n            },\n            ...\n        ]\n    }\n}\n')),(0,r.kt)("p",null,"Then the ",(0,r.kt)("strong",{parentName:"p"},"Charts")," card is updated, as shown below."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"metric-display-type-custom-exec",src:n(1860).Z,width:"1174",height:"318"})))}c.isMDXComponent=!0},1860:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/metric-display-type-custom-exec-c408d1a9fa79bbb0ccb8a37452494917.png"},9199:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/metric-display-type-temperature-exec-a9cafae5634cde5e9108884d6fba0cb5.png"},9872:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/metric-init-900a8dd41e20f00a64908fccca633b57.svg"},9633:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/metric-sequence-a26c82ca23903c1f687e7d274a37d8dc.svg"},9365:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/metrics-first-shot-b94d60031eb6c146d95466929659f368.svg"},9183:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/metrics-second-shot-d1b032f4621545e7927ae9e0c10e5eb0.png"}}]);