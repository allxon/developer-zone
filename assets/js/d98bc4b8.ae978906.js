"use strict";(self.webpackChunkocto_develop_zone=self.webpackChunkocto_develop_zone||[]).push([[4610],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),m=p(n),c=i,g=m["".concat(o,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(g,s(s({ref:t},d),{},{components:n})):a.createElement(g,s({ref:t},d))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,s=new Array(l);s[0]=m;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r.mdxType="string"==typeof e?e:i,s[1]=r;for(var p=2;p<l;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5617:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const l={},s=void 0,r={unversionedId:"Implement Features/States",id:"Implement Features/States",title:"States",description:"states-sequence",source:"@site/docs/Implement Features/States.md",sourceDirName:"Implement Features",slug:"/Implement Features/States",permalink:"/Implement Features/States",draft:!1,editUrl:"https://github.com/allxon/developer-zone/edit/master/docs/Implement Features/States.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Properties",permalink:"/Implement Features/Properties"},next:{title:"Commands",permalink:"/Implement Features/Commands"}},o={},p=[{value:"Tutorials",id:"tutorials",level:2},{value:"Display Type",id:"display-type",level:2},{value:"String",id:"string",level:3},{value:"Link",id:"link",level:3},{value:"Table",id:"table",level:3}],d={toc:p};function u(e){let{components:t,...l}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"states-sequence",src:n(8577).Z,width:"3197",height:"1373"})),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"States")," card is designed for providing current device states. Such data is not reserved on Allxon Cloud; only the latest data is shown on the Portal. You need to send ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginState")," to initialize the ",(0,i.kt)("strong",{parentName:"p"},"States")," card, and then continually send ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginState")," to update the information on the ",(0,i.kt)("strong",{parentName:"p"},"States")," card. "),(0,i.kt)("h2",{id:"tutorials"},"Tutorials"),(0,i.kt)("p",null,"Here is an example of creating the ",(0,i.kt)("strong",{parentName:"p"},"States")," card:"),(0,i.kt)("p",null,"First, send the following ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginState")," JSON."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"{17-25}","{17-25}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginUpdate",\n    "params": {\n        "sdk": "${OCTO_SDK_VERSION}",\n        "appGUID": "${PLUGIN_APP_GUID}",\n        "appName": "${PLUGIN_NAME}",\n        "epoch": "",\n        "displayName": "Device Info",\n        "type": "ib",\n        "version": "${PLUGIN_VERSION}",\n        "modules": [\n            {\n                "moduleName": "device-info-plugin",\n                "displayName": "Device Info",\n                "properties": [],\n                "states": [\n                    {\n                        "name": "battery-percent",\n                        "displayCategory": "Power",\n                        "displayName": "Battery",\n                        "description": "remaining battery percentage",\n                        "displayType": "string"\n                    }\n                ]\n            }\n        ]\n    }\n}\n')),(0,i.kt)("p",null,"Once done, Allxon Portal shows the ",(0,i.kt)("strong",{parentName:"p"},"States")," card below. There is no value for ",(0,i.kt)("em",{parentName:"p"},"Battery")," because it's still in the initialization state."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"states-card",src:n(6339).Z,width:"3314",height:"1128"})),(0,i.kt)("p",null,"Next, send ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginState")," to assign and update the ",(0,i.kt)("em",{parentName:"p"},"Battery")," value:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"{11}","{11}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginState",\n    "params": {\n        "appGUID": "${PLUGIN_APP_GUID}",\n        "moduleName": "${PLUGIN_NAME}",\n        "epoch": "",\n        "states": [\n            {\n                "name": "battery-percent",\n                "value": "50"\n            }\n        ]\n    }\n}\n')),(0,i.kt)("p",null,"Then you can see the ",(0,i.kt)("em",{parentName:"p"},"Battery")," value has been updated, and the time of update is displayed below the value."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"states-battery",src:n(4853).Z,width:"3315",height:"1127"})),(0,i.kt)("admonition",{title:"Limitation",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The update frequency of the ",(0,i.kt)("strong",{parentName:"p"},"States")," value is about once a minute.")),(0,i.kt)("h2",{id:"display-type"},"Display Type"),(0,i.kt)("p",null,"The card supports three display types: ",(0,i.kt)("a",{parentName:"p",href:"#string"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"#link"},"link"),", and ",(0,i.kt)("a",{parentName:"p",href:"#table"},"table"),". For how to set up these display types, see the following sections."),(0,i.kt)("h3",{id:"string"},"String"),(0,i.kt)("p",null,"The following example shows the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a state in string format."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "states": [ \n        {\n            "name": "stringState",\n            "displayType": "string",\n            ...\n        },\n        ...\n    ]\n}\n')),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginState.json")," is used to update the state, the ",(0,i.kt)("inlineCode",{parentName:"p"},'"name"')," must be identical to that in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json"),", and the data type of ",(0,i.kt)("inlineCode",{parentName:"p"},'"value"')," must be ",(0,i.kt)("strong",{parentName:"p"},"String"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginState.json"',title:'"v2/notifyPluginState.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginState",\n    "params": {\n        "states": [ \n            {\n                "name": "stringState",\n                "value": "my state string"\n            },\n            ...\n        ]\n    }\n}\n')),(0,i.kt)("p",null,"Then the ",(0,i.kt)("strong",{parentName:"p"},"States")," card is updated, as shown below.\n",(0,i.kt)("img",{alt:"state-display-type-string-exec",src:n(3839).Z,width:"589",height:"176"})),(0,i.kt)("h3",{id:"link"},"Link"),(0,i.kt)("p",null,"The following example shows the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a state as a hyperlink."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "states": [ \n        {\n            "name": "linkState",\n            "displayType": "link",\n            ...\n        },\n        ...\n    ]\n}\n')),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginState.json")," is used to update the state, the ",(0,i.kt)("inlineCode",{parentName:"p"},'"name"')," must be identical to that in ",(0,i.kt)("inlineCode",{parentName:"p"},'"v2/notifyPluginUpdate.json"'),", and the data type of ",(0,i.kt)("inlineCode",{parentName:"p"},'"value"')," must be ",(0,i.kt)("strong",{parentName:"p"},"Object")," along with ",(0,i.kt)("inlineCode",{parentName:"p"},'"url"')," and ",(0,i.kt)("inlineCode",{parentName:"p"},'"alias"'),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginState.json"',title:'"v2/notifyPluginState.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginState",\n    "params": {\n        ...\n        "states": [ \n            {\n                "name": "linkState",\n                "value": {\n                    "url": "https://www.google.com",\n                    "alias": "Google Site"\n                }\n            },\n            ...\n        ]\n    }\n}\n')),(0,i.kt)("p",null,"Then the ",(0,i.kt)("strong",{parentName:"p"},"States")," card is updated, as shown below."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"state-display-type-link-exec",src:n(8725).Z,width:"589",height:"172"})),(0,i.kt)("h3",{id:"table"},"Table"),(0,i.kt)("p",null,"The following example shows the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a state in a table."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "states": [ \n        {\n            "name": "tableState",\n            "displayType": "table",\n            ...\n        },\n        ...\n    ]\n}\n')),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},'"v2/notifyPluginState.json"')," is used to update the state, the ",(0,i.kt)("inlineCode",{parentName:"p"},'"name"')," must be identical to that in ",(0,i.kt)("inlineCode",{parentName:"p"},'"v2/notifyPluginUpdate.json"'),". To define the content of the table, the data type of ",(0,i.kt)("inlineCode",{parentName:"p"},'"value"')," must be Array and follow the format in the example below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginState.json"',title:'"v2/notifyPluginState.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginState",\n    "params": {\n        ...\n        "states": [ \n            {\n                "name": "tableState",\n                "value": [\n                    {\n                        "header1": "row1 column1",\n                        "header2": "row1 column2"\n                    },\n                    {\n                        "header1": "row2 column2",\n                        "header2": "row2 column2"\n                    }\n                ]\n            }\n        ]\n    }\n}\n')),(0,i.kt)("p",null,"Then the ",(0,i.kt)("strong",{parentName:"p"},"States")," card displays a table icon."),(0,i.kt)("p",null," ",(0,i.kt)("img",{alt:"state-display-type-table-exec",src:n(4020).Z,width:"583",height:"181"})),(0,i.kt)("p",null,"Clicking the table icon brings up the details."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"state-display-type-table-popup",src:n(9111).Z,width:"526",height:"285"})))}u.isMDXComponent=!0},8725:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/state-display-type-link-exec-1fdd17eb67852f77deb7e160d595b9ac.png"},3839:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/state-display-type-string-exec-fda669af52fa8f9ac57da0bc21851c12.png"},4020:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/state-display-type-table-exec-d739f36c95b4b14101df81c7eba51a2b.png"},9111:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/state-display-type-table-popup-ec8999312e0e82e782afd56b788bd9c0.png"},4853:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/states-battery-50-9ccf6ec092b4b5139ab5114154266061.svg"},6339:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/states-card-8e54b5bdb40a71b9ba5ca0ce7178183c.svg"},8577:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/states-sequence-10604666811625d57c0f8c311793d30e.svg"}}]);