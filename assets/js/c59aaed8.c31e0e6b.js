"use strict";(self.webpackChunkocto_develop_zone=self.webpackChunkocto_develop_zone||[]).push([[94],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),r=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=r(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),c=r(t),u=o,g=c["".concat(s,".").concat(u)]||c[u]||d[u]||i;return t?a.createElement(g,l(l({ref:n},p),{},{components:t})):a.createElement(g,l({ref:n},p))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=c;var m={};for(var s in n)hasOwnProperty.call(n,s)&&(m[s]=n[s]);m.originalType=e,m.mdxType="string"==typeof e?e:o,l[1]=m;for(var r=2;r<i;r++)l[r]=t[r];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6006:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>m,toc:()=>r});var a=t(7462),o=(t(7294),t(3905));const i={},l=void 0,m={unversionedId:"Implement Features/Commands",id:"Implement Features/Commands",title:"Commands",description:"command-sequence",source:"@site/docs/Implement Features/Commands.md",sourceDirName:"Implement Features",slug:"/Implement Features/Commands",permalink:"/Implement Features/Commands",draft:!1,editUrl:"https://github.com/allxon/developer-zone/edit/master/docs/Implement Features/Commands.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"States",permalink:"/Implement Features/States"},next:{title:"Alerts",permalink:"/Implement Features/Alerts"}},s={},r=[{value:"Tutorials",id:"tutorials",level:2},{value:"Display Type",id:"display-type",level:2},{value:"String",id:"string",level:3},{value:"Text",id:"text",level:3},{value:"Datetime",id:"datetime",level:3},{value:"Switch",id:"switch",level:3},{value:"Checkbox",id:"checkbox",level:3},{value:"List",id:"list",level:3},{value:"ToS",id:"tos",level:3}],p={toc:r};function d(e){let{components:n,...i}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-sequence",src:t(9001).Z,width:"3196",height:"1616"})),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," feature allows developers to define the commands supported by the plugin. The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card provides a custom GUI to send commands through Allxon Portal. You need to send ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate")," to initialize the card. When you execute commands from Allxon Portal, the plugin receives ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand"),", sends ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommandAck")," back to confirm receipt, and finally sends ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommandAck")," again to bring the execution result back to Allxon Portal."),(0,o.kt)("h2",{id:"tutorials"},"Tutorials"),(0,o.kt)("p",null,"Here is a example of using the ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{17-35}","{17-35}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginUpdate",\n    "params": {\n        "sdk": "${OCTO_SDK_VERSION}",\n        "appGUID": "${PLUGIN_APP_GUID}",\n        "appName": "${PLUGIN_NAME}",\n        "epoch": "",\n        "displayName": "plugIN Hello",\n        "type": "ib",\n        "version": "${PLUGIN_VERSION}",\n        "modules": [\n            {\n                "moduleName": "${PLUGIN_NAME}",\n                "displayName": "plugIN Hello",\n                "properties": [],\n                "commands": [\n                    {\n                        "name": "say_hello",\n                        "type": "asynchronous",\n                        "displayCategory": "Action",\n                        "displayName": "Say Hello",\n                        "description": "Say hello to a person",\n                        "params": [\n                            {\n                                "name": "person",\n                                "displayName": "Person Name",\n                                "description": "Person who you wanna to say hello",\n                                "displayType": "string",\n                                "required": true,\n                                "defaultValue": "Buzz"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-card",src:t(3323).Z,width:"3806",height:"2170"}),"\nFill in the parameter and click the Execute button. Then the command is brought to the plugin via ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{3}","{3}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginCommand?authorization=$argon2id$v=19$m=64,t=16,p=8$YnFaWiIoX1ckSmE9Tkp5YQ$XLS6riVCcBj/EUr5lYnJ8Q",\n    "params": {\n        "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n        "moduleName": "plugin-hello",\n        "commandSource": "remote",\n        "commands": [\n            {\n                "name": "say_hello",\n                "params": [\n                    {\n                        "name": "person",\n                        "value": "Buzz"\n                    }\n                ]\n            }\n        ],\n        "commandId": "d0a0af987c17da435b2bc44dfbee8ffe90104f4f",\n        "epoch": "1664185099"\n    }\n}\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You might be curious about the text following the \u201c",(0,o.kt)("em",{parentName:"p"},"?"),"\u201d mark in the highlighted line. Such text is used for safety verification. When you call ",(0,o.kt)("inlineCode",{parentName:"p"},"JsonValidator::Verify()"),", Allxon Octo SDK verifies whether this JSON is safe through the text.")),(0,o.kt)("p",null,"Once the plugin receives ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand"),", it sends back ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommandAck")," with ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ACCEPTED"')," to Allxon Portal to confirm receipt."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The plugin responds with ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ACCEPTED"')," or ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "REJECTED"')," to inform the Portal whether the plugin accepts this command or not.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{10}","{10}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginCommandAck",\n    "params": {\n        "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n        "epoch": "1664250407",\n        "commandId": "c96a50867715c200fbea63b5898945512afd9409",\n        "commandSource": "remote",\n        "moduleName": "plugin-hello",\n        "commandState": "ACCEPTED",\n        "commandAcks": [\n            {\n                "name": "say_hello",\n                "result": {\n                    "response": "Hello Buzz"\n                }\n            }\n        ]\n    }\n}\n')),(0,o.kt)("p",null,"After completing your command task, send back to Allxon Portal v",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommandAck")," with ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ACKED"'),", which contains the execution result."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{10}","{10}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginCommandAck",\n    "params": {\n        "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n        "epoch": "1664250407",\n        "commandId": "c96a50867715c200fbea63b5898945512afd9409",\n        "commandSource": "remote",\n        "moduleName": "plugin-hello",\n        "commandState": "ACKED",\n        "commandAcks": [\n            {\n                "name": "say_hello",\n                "result": {\n                    "response": "Hello Buzz"\n                }\n            }\n        ]\n    }\n}\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The plugin responds with ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ACKED"')," or ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ERRORED"'),"to inform the Portal of the execution result.")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When the Portal sends out ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand"),", a commandId is included. The plugin needs to read and include the commandId when sending back the ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommandAck"),".")),(0,o.kt)("p",null,"If all goes well, the ",(0,o.kt)("strong",{parentName:"p"},"Command Response Details")," dialog is displayed on Allxon Portal, as shown below:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-result",src:t(9669).Z,width:"561",height:"665"})),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Allxon Portal has a command execution timeout of one minute. If the plugin executes the command for more than a minute, the Portal shows a timeout message.")),(0,o.kt)("h2",{id:"display-type"},"Display Type"),(0,o.kt)("p",null,"The card supports several parameter input types (i.e. displayType): ",(0,o.kt)("a",{parentName:"p",href:"#string"},"string"),", ",(0,o.kt)("a",{parentName:"p",href:"#text"},"text"),", ",(0,o.kt)("a",{parentName:"p",href:"#datetime"},"datetime"),", ",(0,o.kt)("a",{parentName:"p",href:"#switch"},"switch"),", ",(0,o.kt)("a",{parentName:"p",href:"#checkbox"},"checkbox"),", ",(0,o.kt)("a",{parentName:"p",href:"#list"},"list"),", and ",(0,o.kt)("a",{parentName:"p",href:"#tos"},"ToS"),". For how to set up these input types, see the following sections."),(0,o.kt)("h3",{id:"string"},"String"),(0,o.kt)("p",null,"The following example shows the code in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a text box for parameter input. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "commands": [ \n        {\n            "name": "command1",\n            "params": [\n                {\n                    "name": "stringParam",\n                    "displayType": "string",                \n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card displays as follows:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-display-type-string",src:t(6863).Z,width:"588",height:"370"})),(0,o.kt)("p",null,"When a command is executed, ",(0,o.kt)("inlineCode",{parentName:"p"},'"v2/notifyPluginCommand"')," carries a ",(0,o.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,o.kt)("inlineCode",{parentName:"p"},'"value"')," from the input parameter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginCommand.json"',title:'"v2/notifyPluginCommand.json"'},'{\n    ...\n    "commands": [\n        {\n            "name": "command1",\n            "params": [\n               {\n                  "name": "stringParam",\n                  "value": "foo"\n               }\n            ]\n        }\n    ]\n}\n')),(0,o.kt)("h3",{id:"text"},"Text"),(0,o.kt)("p",null,"The following example shows the code in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a multiline text box for parameter input. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "commands": [ \n        {\n            "name": "command1",\n            "params": [\n                {\n                    "name": "textParam",\n                    "displayType": "text",                \n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card displays as follows:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-display-type-text",src:t(8306).Z,width:"584",height:"376"})),(0,o.kt)("p",null,"When a command is executed, ",(0,o.kt)("inlineCode",{parentName:"p"},'"v2/notifyPluginCommand"')," carries a ",(0,o.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,o.kt)("inlineCode",{parentName:"p"},'"value"')," from the input parameter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginCommand.json"',title:'"v2/notifyPluginCommand.json"'},'{\n    ...\n    "commands": [\n        {\n            "name": "command1",\n            "params": [\n               {\n                  "name": "dateParam",\n                  "value": "hello\\nworld"\n               }\n            ]\n        }\n    ]\n}\n')),(0,o.kt)("h3",{id:"datetime"},"Datetime"),(0,o.kt)("p",null,"The following example shows the code in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a date/time picker for parameter input. You must define ",(0,o.kt)("inlineCode",{parentName:"p"},'"displayFormat"')," by using one of the following formats:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"YYYY-MM-DD"')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"HH:MM"')," "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"YYYY-MM-DD HH:MM"'))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "commands": [ \n        {\n            "name": "command1",\n            "params": [\n                {\n                    "name": "dateParam",\n                    "displayType": "datetime",                \n                    "required": false,\n                    "displayFormat": "HH:MM",\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card displays as follows:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-display-type-date",src:t(8810).Z,width:"583",height:"380"})),(0,o.kt)("p",null,"When a command is executed, ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand")," carries a ",(0,o.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,o.kt)("inlineCode",{parentName:"p"},'"value"')," that follows the ",(0,o.kt)("inlineCode",{parentName:"p"},'"displayFormat"')," defined in the ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginCommand.json"',title:'"v2/notifyPluginCommand.json"'},'{\n    ...\n    "commands": [\n        {\n            "name": "command1",\n            "params": [\n               {\n                  "name": "dateParam",\n                  "value": "12:00"\n               }\n            ]\n        }\n    ]\n}\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The time parameter to be sent is not a timestamp and does not contain any time zone information. The plugin executes the command of datetime parameter according to the device's time zone.")),(0,o.kt)("h3",{id:"switch"},"Switch"),(0,o.kt)("p",null,"The following example shows the code in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a switch toggle for parameter input. The switch toggle is used to switch between two parameters. You must define ",(0,o.kt)("inlineCode",{parentName:"p"},'"displayValues"')," as a size 2 Array, with index 0 representing false and index 1 representing true. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "commands": [ \n        {\n            "name": "command1",\n            "params": [\n                {\n                    "name": "switchParam",\n                    "displayType": "switch",                \n                    "displayValues": [\n                        "offValue",\n                        "onValue"\n                    ],\n                    "defaultValue": "offValue",\n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card displays as follows:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-display-type-switch",src:t(6483).Z,width:"579",height:"317"})),(0,o.kt)("p",null,"When a command is executed, ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand")," carries a ",(0,o.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,o.kt)("inlineCode",{parentName:"p"},'"value"')," that follows the ",(0,o.kt)("inlineCode",{parentName:"p"},'"displayValues"')," defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginCommand.json"',title:'"v2/notifyPluginCommand.json"'},'{\n   ...\n   "commands": [\n       {\n           "name": "command1",\n           "params": [\n              {\n                 "name": "switchParam",\n                 "value": "offValue"\n              }\n           ]\n       }\n   ]\n}\n')),(0,o.kt)("h3",{id:"checkbox"},"Checkbox"),(0,o.kt)("p",null,"The following example shows the code in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a checkbox for parameter input. The checkbox is used to enable or disable the parameter. You must define ",(0,o.kt)("inlineCode",{parentName:"p"},'"displayValues"')," as a size 2 Array, with index 0 representing false and index 1 representing true. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "commands": [ \n        {\n            "name": "command1",\n            "params": [\n                {\n                    "name": "checkboxParam",\n                    "displayType": "checkbox",                \n                    "displayValues": [\n                        "offValue",\n                        "onValue"\n                    ],\n                    "defaultValue": "offValue",\n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,o.kt)("p",null,"The Commands card displays as follows:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-display-type-checkbox",src:t(5518).Z,width:"588",height:"336"})),(0,o.kt)("p",null,"When a command is executed, ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand")," carries a ",(0,o.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,o.kt)("inlineCode",{parentName:"p"},'"value"')," that follows the ",(0,o.kt)("inlineCode",{parentName:"p"},'"displayValues"')," defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginCommand.json"',title:'"v2/notifyPluginCommand.json"'},'{\n   ...\n   "commands": [\n       {\n           "name": "command1",\n           "params": [\n              {\n                 "name": "checkboxParam",\n                 "value": "offValue"\n              }\n           ]\n       }\n   ]\n}\n')),(0,o.kt)("h3",{id:"list"},"List"),(0,o.kt)("p",null,"The following example shows the code in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a dropdown list for parameter selection. You must define ",(0,o.kt)("inlineCode",{parentName:"p"},'"displayValues"')," as the ",(0,o.kt)("strong",{parentName:"p"},"Array")," type."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "commands": [ \n        {\n            "name": "command1",\n            "params": [\n                {\n                    "name": "listParam",\n                    "displayType": "list",\n                    "displayValues": [\n                        "list1",\n                        "list2"\n                    ],\n                    "required": false\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card displays as follows:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-display-type-list",src:t(8698).Z,width:"591",height:"383"})),(0,o.kt)("p",null,"When a command is executed, ",(0,o.kt)("inlineCode",{parentName:"p"},'"v2/notifyPluginCommand"')," carries a ",(0,o.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,o.kt)("inlineCode",{parentName:"p"},'"value"')," that follows the ",(0,o.kt)("inlineCode",{parentName:"p"},'"displayValues"')," defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginCommand.json"',title:'"v2/notifyPluginCommand.json"'},'{\n    ...\n    "commands": [\n        {\n            "name": "command1",\n            "params": [\n               {\n                  "name": "listParam",\n                  "value": "list1"\n               }\n            ]\n        }\n    ]\n}\n')),(0,o.kt)("h3",{id:"tos"},"ToS"),(0,o.kt)("p",null,"ToS stands for ",(0,o.kt)("strong",{parentName:"p"},"Terms of Service"),". The following example shows the code in ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a mandatory parameter that requires users to agree with the ToS to proceed with command execution. You must define ",(0,o.kt)("inlineCode",{parentName:"p"},'"displayName"')," as ",(0,o.kt)("strong",{parentName:"p"},"alias")," and ",(0,o.kt)("inlineCode",{parentName:"p"},'"description"')," as the ",(0,o.kt)("strong",{parentName:"p"},"URL")," of the ToS."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "commands": [ \n        {\n            "name": "command1",\n            "params": [\n                {\n                    "name": "tosParam",\n                    "displayType": "tos",\n                    "displayName": "Terms of Service",\n                    "description": "https://policies.google.com/terms?hl=en-US",\n                    "required": true\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card displays as follows:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-display-type-tos",src:t(7269).Z,width:"587",height:"332"})),(0,o.kt)("p",null,"When a command is executed, ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand")," carries a ",(0,o.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,o.kt)("inlineCode",{parentName:"p"},'"value": false'),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginCommand.json"',title:'"v2/notifyPluginCommand.json"'},'{\n    ...\n    "commands": [\n        {\n            "name": "command1",\n            "params": [\n               {\n                  "name": "tosParam",\n                  "value": false\n               }\n            ]\n        }\n    ]\n}\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The data type of ",(0,o.kt)("inlineCode",{parentName:"p"},'"value"')," is ",(0,o.kt)("strong",{parentName:"p"},"Bool"),".")))}d.isMDXComponent=!0},3323:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-card-10fcfb5e015f9e9ca94369f5fac21f68.svg"},5518:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-display-type-checkbox-cf2b56ccbe4ca1da99abc977b9f40196.png"},8810:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-display-type-date-063c3847e27566e0e5cd677514d61718.png"},8698:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-display-type-list-54e3c7a2e77d40ad5177f14dd6faf8f0.png"},6863:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-display-type-string-a995d6161dbc4f5ca23d02d7cf67468d.png"},6483:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-display-type-switch-ce8b16e15aa6696ac3205df8f22f6acd.png"},8306:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-display-type-text-b9a9cd3253e8e97974472b27ae913a14.png"},7269:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-display-type-tos-e12e91584aa4e2b34ad24c08cc63a691.png"},9669:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-result-e36e4f8e7853592d02329a36825d81a3.png"},9001:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-sequence-4ffb8b01cee2b01487df23777921bcb8.svg"}}]);