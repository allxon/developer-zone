"use strict";(self.webpackChunkocto_develop_zone=self.webpackChunkocto_develop_zone||[]).push([[94],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>u});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function m(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):m(m({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(t),u=o,f=d["".concat(i,".").concat(u)]||d[u]||c[u]||r;return t?a.createElement(f,m(m({ref:n},s),{},{components:t})):a.createElement(f,m({ref:n},s))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,m=new Array(r);m[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,m[1]=l;for(var p=2;p<r;p++)m[p]=t[p];return a.createElement.apply(null,m)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6006:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>m,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=t(7462),o=(t(7294),t(3905));const r={},m=void 0,l={unversionedId:"Implement Features/Commands",id:"Implement Features/Commands",title:"Commands",description:"command-sequence",source:"@site/docs/Implement Features/Commands.md",sourceDirName:"Implement Features",slug:"/Implement Features/Commands",permalink:"/Implement Features/Commands",draft:!1,editUrl:"https://github.com/allxon/developer-zone/edit/master/docs/Implement Features/Commands.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"States",permalink:"/Implement Features/States"},next:{title:"Alerts",permalink:"/Implement Features/Alerts"}},i={},p=[],s={toc:p};function c(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-sequence",src:t(7422).Z,width:"680",height:"508"})),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," feature allows developers to define the commands supported by the plugin. The ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card provides a custom GUI to send commands through Allxon Portal. You need to send ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate")," to initialize the card. When you execute commands from Allxon Portal, the plugin receives ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand"),", sends ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommandAck")," back to confirm receipt, and finally sends ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommandAck")," again to bring the execution result back to Allxon Portal."),(0,o.kt)("p",null,"Here is a example of using the ",(0,o.kt)("strong",{parentName:"p"},"Commands")," card:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{17-35}","{17-35}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginUpdate",\n    "params": {\n        "sdk": "${OCTO_SDK_VERSION}",\n        "appGUID": "${PLUGIN_APP_GUID}",\n        "appName": "${PLUGIN_NAME}",\n        "epoch": "",\n        "displayName": "plugIN Hello",\n        "type": "ib",\n        "version": "${PLUGIN_VERSION}",\n        "modules": [\n            {\n                "moduleName": "${PLUGIN_NAME}",\n                "displayName": "plugIN Hello",\n                "properties": [],\n                "commands": [\n                    {\n                        "name": "say_hello",\n                        "type": "asynchronous",\n                        "displayCategory": "Action",\n                        "displayName": "Say Hello",\n                        "description": "Say hello to a person",\n                        "params": [\n                            {\n                                "name": "person",\n                                "displayName": "Person Name",\n                                "description": "Person who you wanna to say hello",\n                                "displayType": "string",\n                                "required": true,\n                                "defaultValue": "Buzz"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-card",src:t(7695).Z,width:"587",height:"631"})),(0,o.kt)("p",null,"Fill in the parameter and click the Execute button. Then the command is brought to the plugin via ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{3}","{3}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginCommand?authorization=$argon2id$v=19$m=64,t=16,p=8$YnFaWiIoX1ckSmE9Tkp5YQ$XLS6riVCcBj/EUr5lYnJ8Q",\n    "params": {\n        "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n        "moduleName": "plugin-hello",\n        "commandSource": "remote",\n        "commands": [\n            {\n                "name": "say_hello",\n                "params": [\n                    {\n                        "name": "person",\n                        "value": "Buzz"\n                    }\n                ]\n            }\n        ],\n        "commandId": "d0a0af987c17da435b2bc44dfbee8ffe90104f4f",\n        "epoch": "1664185099"\n    }\n}\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You might be curious about the text following the \u201c",(0,o.kt)("em",{parentName:"p"},"?"),"\u201d mark in the highlighted line. Such text is used for safety verification. When you call ",(0,o.kt)("inlineCode",{parentName:"p"},"JsonValidator::Verify()"),", Allxon Octo SDK verifies whether this JSON is safe through the text.")),(0,o.kt)("p",null,"Once the plugin receives ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommand"),", it sends back ",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommandAck")," with ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ACCEPTED"')," to Allxon Portal to confirm receipt."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The plugin responds with ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ACCEPTED"')," or ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "REJECTED"')," to inform the Portal whether the plugin accepts this command or not.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{10}","{10}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginCommandAck",\n    "params": {\n        "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n        "epoch": "1664250407",\n        "commandId": "c96a50867715c200fbea63b5898945512afd9409",\n        "commandSource": "remote",\n        "moduleName": "plugin-hello",\n        "commandState": "ACCEPTED",\n        "commandAcks": [\n            {\n                "name": "say_hello",\n                "result": {\n                    "response": "Hello Buzz"\n                }\n            }\n        ]\n    }\n}\n')),(0,o.kt)("p",null,"After completing your command task, send back to Allxon Portal v",(0,o.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginCommandAck")," with ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ACKED"'),", which contains the execution result."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{10}","{10}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginCommandAck",\n    "params": {\n        "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n        "epoch": "1664250407",\n        "commandId": "c96a50867715c200fbea63b5898945512afd9409",\n        "commandSource": "remote",\n        "moduleName": "plugin-hello",\n        "commandState": "ACKED",\n        "commandAcks": [\n            {\n                "name": "say_hello",\n                "result": {\n                    "response": "Hello Buzz"\n                }\n            }\n        ]\n    }\n}\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The plugin responds with ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ACKED"')," or ",(0,o.kt)("inlineCode",{parentName:"p"},'"commandState": "ERRORED"'),"to inform the Portal of the execution result.")),(0,o.kt)("p",null,"If all goes well, the ",(0,o.kt)("strong",{parentName:"p"},"Command Response Details")," dialog is displayed on Allxon Portal, as shown below:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"command-result",src:t(9669).Z,width:"561",height:"665"})))}c.isMDXComponent=!0},7695:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-card-3645fb5701aea1c328af9f9ce2f38630.png"},9669:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-result-e36e4f8e7853592d02329a36825d81a3.png"},7422:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/command-sequence-a4f6165dd930d3fbcb9b4cc7ef76ca13.png"}}]);