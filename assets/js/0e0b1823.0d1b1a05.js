"use strict";(self.webpackChunkocto_develop_zone=self.webpackChunkocto_develop_zone||[]).push([[6428],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=d(n),m=l,g=s["".concat(p,".").concat(m)]||s[m]||c[m]||i;return n?a.createElement(g,r(r({ref:t},u),{},{components:n})):a.createElement(g,r({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7270:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(7462),l=(n(7294),n(3905));const i={},r="API Overview",o={unversionedId:"Main Concept/API Overview",id:"version-1.1.0/Main Concept/API Overview",title:"API Overview",description:"Allxon Octo API adopts JSON-RPC 2.0 specification over WebSocket. To communicate with Allxon Agent, you need to create a WebSocket connection wss55688 from the plugin. Then send/receive requests in the JSON format via the API.",source:"@site/versioned_docs/version-1.1.0/Main Concept/API Overview.md",sourceDirName:"Main Concept",slug:"/Main Concept/API Overview",permalink:"/1.1.0/Main Concept/API Overview",draft:!1,editUrl:"https://github.com/allxon/developer-zone/edit/master/versioned_docs/version-1.1.0/Main Concept/API Overview.md",tags:[],version:"1.1.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Features",permalink:"/1.1.0/Main Concept/Features"},next:{title:"Create a Plugin",permalink:"/1.1.0/Create a Plugin"}},p={},d=[{value:"About <code>v2/notifyPluginUpdate</code> API",id:"about-v2notifypluginupdate-api",level:2},{value:"Allxon Octo JSON RPC API",id:"allxon-octo-json-rpc-api",level:2},{value:"<code>v2/notifyPluginUpdate</code>",id:"v2notifypluginupdate",level:3},{value:"<code>v2/notifyPluginCommand</code>",id:"v2notifyplugincommand",level:3},{value:"<code>v2/notifyPluginCommandAck</code>",id:"v2notifyplugincommandack",level:3},{value:"<code>v2/notifyPluginState</code>",id:"v2notifypluginstate",level:3},{value:"<code>v2/notifyPluginEvent</code>",id:"v2notifypluginevent",level:3},{value:"<code>v2/notifyPluginMetric</code>",id:"v2notifypluginmetric",level:3},{value:"<code>v2/notifyPluginAlert</code>",id:"v2notifypluginalert",level:3},{value:"<code>v2/notifyPluginAlarmUpdate</code>",id:"v2notifypluginalarmupdate",level:3},{value:"<code>v2/notifyPluginConfigUpdate</code>",id:"v2notifypluginconfigupdate",level:3},{value:"Typical API Sequence Flow",id:"typical-api-sequence-flow",level:2}],u={toc:d};function c(e){let{components:t,...i}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"api-overview"},"API Overview"),(0,l.kt)("p",null,"Allxon Octo API adopts ",(0,l.kt)("a",{parentName:"p",href:"https://www.jsonrpc.org/specification"},"JSON-RPC 2.0")," specification over WebSocket. To communicate with Allxon Agent, you need to create a WebSocket connection ",(0,l.kt)("strong",{parentName:"p"},"wss://localhost:55688")," from the plugin. Then send/receive requests in the JSON format via the API."),(0,l.kt)("p",null,":::NOTE\nEach API maximum payload size is 128 KB.\n:::"),(0,l.kt)("p",null,":::NOTE\nNot support ",(0,l.kt)("em",{parentName:"p"},"JSON-RPC batch"),".\n:::"),(0,l.kt)("h2",{id:"about-v2notifypluginupdate-api"},"About ",(0,l.kt)("inlineCode",{parentName:"h2"},"v2/notifyPluginUpdate")," API"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'"method"')," indicates the API's type and  ",(0,l.kt)("inlineCode",{parentName:"p"},'"params"')," -> ",(0,l.kt)("inlineCode",{parentName:"p"},'"sdk"'),"  indicates the  Allxon Octo SDK version. Each JSON object under ",(0,l.kt)("inlineCode",{parentName:"p"},'"params"')," -> ",(0,l.kt)("inlineCode",{parentName:"p"},'"modules"')," corresponds to different cards on Allxon Portal."),(0,l.kt)("p",null,"Here is an example of JSON:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'{16-24} title="resource_dir_linux/plugin_update_template.json" showLineNumbers',"{16-24}":!0,title:'"resource_dir_linux/plugin_update_template.json"',showLineNumbers:!0},'{\n  "jsonrpc": "2.0",\n  "method": "v2/notifyPluginUpdate",\n  "params": {\n    "sdk": "${OCTO_SDK_VERSION}",\n    "appGUID": "${PLUGIN_APP_GUID}",\n    "appName": "${PLUGIN_NAME}",\n    "epoch": "",\n    "displayName": "plugIN Hello",\n    "type": "ib",\n    "version": "${PLUGIN_VERSION}",\n    "modules": [\n      {\n        "moduleName": "${PLUGIN_NAME}",\n        "displayName": "plugIN Hello",\n        "properties": [\n          {\n            "name": "current_dir",\n            "displayName": "Current Working Directory",\n            "description": "Print the current working directory",\n            "displayType": "string",\n            "value": ""\n          }\n        ],\n        "states": [\n          {\n            "name": "receive_hello",\n            "displayName": "Last Received Message",\n            "description": "Last received message from a stranger",\n            "displayType": "string"\n          }\n        ],\n        "commands": [\n          {\n            "name": "say_hello",\n            "type": "asynchronous",\n            "displayCategory": "Action",\n            "displayName": "Say Hello",\n            "description": "Say hello to a person",\n            "params": [\n              {\n                "name": "person",\n                "displayName": "Person Name",\n                "description": "Person who you wanna to say hello",\n                "displayType": "string",\n                "required": true,\n                "defaultValue": "Buzz"\n              }\n            ]\n          }\n        ],\n        "metrics": [],\n        "events": [],\n        "alarms": [\n          {\n            "name": "hello_alarm",\n            "displayCategory": "Message",\n            "displayName": "Hello alarm",\n            "description": "Trigger when someone say hello",\n            "params": []\n          }\n        ],\n        "configs": []\n      }\n    ]\n  }\n}\n')),(0,l.kt)("p",null,"For example, the highlight part of above JSON repesent Property Card on Allxon Portal:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"property",src:n(3993).Z,width:"585",height:"314"})),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"You can use the built-in macro syntax  ",(0,l.kt)("inlineCode",{parentName:"p"},"${}")," to obtain project level information. The current available syntax is as follows: ",(0,l.kt)("inlineCode",{parentName:"p"},"PLUGIN_NAME"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"PLUGIN_APP_GUID"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"PLUGIN_VERSION"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"OCTO_SDK_VERSION"),".")),(0,l.kt)("h2",{id:"allxon-octo-json-rpc-api"},"Allxon Octo JSON RPC API"),(0,l.kt)("p",null,"After getting online to Allxon Portal, your edge device is ready to be managed on the cloud.\nHere is a brief introduction to the API functionalities:"),(0,l.kt)("h3",{id:"v2notifypluginupdate"},(0,l.kt)("inlineCode",{parentName:"h3"},"v2/notifyPluginUpdate")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Direction"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Plugin \u2192 Allxon Agent"),(0,l.kt)("td",{parentName:"tr",align:null},"The plugin initializes every card on Allxon Portal. You must call  ",(0,l.kt)("inlineCode",{parentName:"td"},"v2/notifyPluginUpdate")," API after the WebSocket connection is established.")))),(0,l.kt)("h3",{id:"v2notifyplugincommand"},(0,l.kt)("inlineCode",{parentName:"h3"},"v2/notifyPluginCommand")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Direction"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Allxon Agent \u2192 Plugin"),(0,l.kt)("td",{parentName:"tr",align:null},"The plugin gets notified once the user triggers the command on Allxon Portal.")))),(0,l.kt)("h3",{id:"v2notifyplugincommandack"},(0,l.kt)("inlineCode",{parentName:"h3"},"v2/notifyPluginCommandAck")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Direction"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Plugin \u2192 Allxon Agent"),(0,l.kt)("td",{parentName:"tr",align:null},"After receiving ",(0,l.kt)("inlineCode",{parentName:"td"},"v2/notifyPluginCommand"),", the plugin sends acknowledgement of the command back to Allxon portal.")))),(0,l.kt)("h3",{id:"v2notifypluginstate"},(0,l.kt)("inlineCode",{parentName:"h3"},"v2/notifyPluginState")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Direction"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Plugin \u2192 Allxon Agent"),(0,l.kt)("td",{parentName:"tr",align:null},"The plugin updates the data on the Allxon Portal States card. This functionality is typically designed for real-time update on the current device states, e.g. network condition and power status. Allxon Portal only shows the latest data it receives and doesn\u2019t reserve such data.")))),(0,l.kt)("h3",{id:"v2notifypluginevent"},(0,l.kt)("inlineCode",{parentName:"h3"},"v2/notifyPluginEvent")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Direction"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Plugin \u2192 Allxon Agent"),(0,l.kt)("td",{parentName:"tr",align:null},"The plugin updates the data on the Allxon Portal Events cCard. This functionality is typically designed for non- real-time update on device events, e.g. IO trigger event and user login event. Such data is reserved on Allxon Cloud for 90 days.")))),(0,l.kt)("h3",{id:"v2notifypluginmetric"},(0,l.kt)("inlineCode",{parentName:"h3"},"v2/notifyPluginMetric")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Direction"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Plugin \u2192 Allxon Agent"),(0,l.kt)("td",{parentName:"tr",align:null},"The plugin updates data on the Allxon Portal Charts card. This functionality is typically designed for time-series data presented in a trend chart, e.g. device temperature. Such data is reserved on Allxon Cloud for 90 days.")))),(0,l.kt)("h3",{id:"v2notifypluginalert"},(0,l.kt)("inlineCode",{parentName:"h3"},"v2/notifyPluginAlert")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Direction"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Plugin \u2192 Allxon Agent"),(0,l.kt)("td",{parentName:"tr",align:null},"The plugin triggers Alerts to the Allxon Portal. This functionality is typically designed for emergency data. Depending on your Allxon Portal settings, you can be notified by email, webhook, etc.")))),(0,l.kt)("h3",{id:"v2notifypluginalarmupdate"},(0,l.kt)("inlineCode",{parentName:"h3"},"v2/notifyPluginAlarmUpdate")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Direction"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Allxon Agent \u2192 Plugin"),(0,l.kt)("td",{parentName:"tr",align:null},"Plugin will be notified once the Plugin is online if there are alert settings on Allxon Portal. When you setup your alert setting on Allxon Portal, Plugin will get ",(0,l.kt)("inlineCode",{parentName:"td"},"v2/notifyPluginAlarmUpdate")," to synchronize alert related setting.")))),(0,l.kt)("h3",{id:"v2notifypluginconfigupdate"},(0,l.kt)("inlineCode",{parentName:"h3"},"v2/notifyPluginConfigUpdate")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Direction"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Allxon Agent \u2192 Plugin"),(0,l.kt)("td",{parentName:"tr",align:null},"If Configs is set up on Allxon Portal, the plugin gets notified once it comes online. This functionality is typically designed for configuring your device through Allxon Portal.")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"For more details, please refer to the ",(0,l.kt)("a",{parentName:"p",href:"https://wayneliu0512.github.io/octo-developer-zone_docusaurus/API%20Reference"},"API documentation"))),(0,l.kt)("h2",{id:"typical-api-sequence-flow"},"Typical API Sequence Flow"),(0,l.kt)("p",null,"Here is a typical API sequence flow:\n",(0,l.kt)("img",{alt:"sequence-diagram",src:n(2178).Z,width:"449",height:"305"})),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Connect to Allxon Agent by Websocket."),(0,l.kt)("li",{parentName:"ol"},"Send 'v2/notifyPluginUpdate' to initialize Allxon Portal cards."),(0,l.kt)("li",{parentName:"ol"},"If you have set up Alert Setting on Allxon Portal, you will receive 'v2/notifyPluginAlarmUpdate'."),(0,l.kt)("li",{parentName:"ol"},"If you have set up Configs on Allxon Portal, you will receive 'v2/notifyPluginConfigUpdate'.")))}c.isMDXComponent=!0},2178:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/sequence-diagram-ecdbcb33b3075547e38922e43c6fb79b.png"},3993:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/screenshot_property-08f4d45aa5ecf04f4e53581b059a3815.png"}}]);