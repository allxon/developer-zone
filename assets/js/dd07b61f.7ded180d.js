"use strict";(self.webpackChunkocto_develop_zone=self.webpackChunkocto_develop_zone||[]).push([[417],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),g=s(t),u=i,f=g["".concat(p,".").concat(u)]||g[u]||m[u]||o;return t?a.createElement(f,l(l({ref:n},d),{},{components:t})):a.createElement(f,l({ref:n},d))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=g;var r={};for(var p in n)hasOwnProperty.call(n,p)&&(r[p]=n[p]);r.originalType=e,r.mdxType="string"==typeof e?e:i,l[1]=r;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},637:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>s});var a=t(7462),i=(t(7294),t(3905));const o={},l=void 0,r={unversionedId:"Implement Features/Configs",id:"Implement Features/Configs",title:"Configs",description:"config-sequence",source:"@site/docs/Implement Features/Configs.md",sourceDirName:"Implement Features",slug:"/Implement Features/Configs",permalink:"/Implement Features/Configs",draft:!1,editUrl:"https://github.com/allxon/developer-zone/edit/master/docs/Implement Features/Configs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/Implement Features/Events"},next:{title:"Rate Limits",permalink:"/Rate Limits"}},p={},s=[{value:"Tutorials",id:"tutorials",level:2},{value:"Display Type",id:"display-type",level:2},{value:"String",id:"string",level:3},{value:"Datetime",id:"datetime",level:3},{value:"Switch",id:"switch",level:3},{value:"Checkbox",id:"checkbox",level:3},{value:"List",id:"list",level:3},{value:"Temperature",id:"temperature",level:3}],d={toc:s};function m(e){let{components:n,...o}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"config-sequence",src:t(7499).Z,width:"3196",height:"1214"})),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Configs")," feature sequence flow is similar to that of the ",(0,i.kt)("strong",{parentName:"p"},"Alerts")," feature. You need to send ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate")," to initialize the ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card on Allxon Portal. Then you can proceed to complete the settings. Once done, the plugin receives ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginConfigUpdate")," for the settings."),(0,i.kt)("h2",{id:"tutorials"},"Tutorials"),(0,i.kt)("p",null,"Here is an example of creating the ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card:"),(0,i.kt)("p",null,"First, send ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"{17-31}","{17-31}":!0},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginUpdate",\n    "params": {\n        "sdk": "${OCTO_SDK_VERSION}",\n        "appGUID": "${PLUGIN_APP_GUID}",\n        "appName": "${PLUGIN_NAME}",\n        "epoch": "",\n        "displayName": "plugIN Hello",\n        "type": "ib",\n        "version": "${PLUGIN_VERSION}",\n        "modules": [\n            {\n                "moduleName": "${PLUGIN_NAME}",\n                "displayName": "plugIN Hello",\n                "properties": [],\n                "configs": [\n                    {\n                        "name": "screenshot",\n                        "displayName": "Take Screenshot",\n                        "description": "automate rule when taking screenshot",\n                        "displayCategory": "Management",\n                        "params": [\n                            {\n                                "name": "Insert a Watermark",\n                                "required": true,\n                                "displayType": "string"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}\n\n')),(0,i.kt)("p",null,"Then you can see the ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card, as shown below."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"config-init",src:t(8152).Z,width:"3094",height:"1055"})),(0,i.kt)("p",null,"At this time, the Config is not yet set up. The Portal sends the following ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginConfigUpdate")," to the plugin for resting config configuration."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Going to deprecated format")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate?authorization=$argon2id$v=19$m=64,t=16,p=8$KksxWlhPbjRULHA0Yj5WYA$abdF1Vo4573+Uz5I0Xz81A",\n    "params": {\n        "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n        "epoch": "1664866949"\n    }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Up coming format")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate?authorization=$argon2id$v=19$m=64,t=16,p=8$KksxWlhPbjRULHA0Yj5WYA$abdF1Vo4573+Uz5I0Xz81A",\n    "params": {\n        "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n        "version": "1.0.1",\n        "epoch": "1664866949",\n        "modules": [\n            {\n                "moduleName": "plugin-hello",\n                "epoch": "1664866940",\n                "configs": []\n            }\n        ]\n    }\n}\n')),(0,i.kt)("p",null,"Now let\u2019s try updating the settings of the ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card. Use the following procedure to fill in the parameters. "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Click ",(0,i.kt)("strong",{parentName:"li"},"Edit")," on the upper right corner of the card."),(0,i.kt)("li",{parentName:"ol"},"Enter ",(0,i.kt)("em",{parentName:"li"},'"my display"')," as the parameter and click ",(0,i.kt)("strong",{parentName:"li"},"Save"))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"config-set-param",src:t(3568).Z,width:"3094",height:"1052"})),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"A confirmation dialog pops up. Click ",(0,i.kt)("strong",{parentName:"li"},"Save")," to confirm the change.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"config-set-finished",src:t(2421).Z,width:"418",height:"188"})),(0,i.kt)("p",null,"Once done, the plugin gets notified of the configs setting update by receiving the following new ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginConfigUpdate"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate?authorization=$argon2id$v=19$m=64,t=16,p=8$KksxWlhPbjRULHA0Yj5WYA$abdF1Vo4573+Uz5I0Xz81A",\n    "params": {\n        "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n        "version": "1.0.1",\n        "epoch": "1664866949",\n        "modules": [\n            {\n                "moduleName": "plugin-hello",\n                "epoch": "1664866940",\n                "configs": [\n                    {\n                        "name": "screenshot",\n                        "params": [\n                            {\n                                "name": "Insert a watermark",\n                                "value": "Confidentials"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}\n')),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The settings of Alerts and Configs belong to the ",(0,i.kt)("strong",{parentName:"p"},"group-level"),". When the user changes the Alerts/Configs settings on the Portal, the Portal deploys the changes to all the plugins in the same device group. Then Allxon Portal displays the ",(0,i.kt)("strong",{parentName:"p"},"Alerts/Configs")," card based on the latest plugin version in the device group and stores the latest settings."),(0,i.kt)("p",{parentName:"admonition"},"When the plugin receives the Alerts/Configs settings, it MUST check whether the settings are supported by the current plugin version. If not supported, the plugin MUST ignore the message. ")),(0,i.kt)("h2",{id:"display-type"},"Display Type"),(0,i.kt)("p",null," The ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card supports several parameter input types (i.e. displayType): ",(0,i.kt)("a",{parentName:"p",href:"#string"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"#datetime"},"datetime"),", ",(0,i.kt)("a",{parentName:"p",href:"#switch"},"switch"),", ",(0,i.kt)("a",{parentName:"p",href:"#checkbox"},"checkbox"),", ",(0,i.kt)("a",{parentName:"p",href:"#list"},"list"),", and ",(0,i.kt)("a",{parentName:"p",href:"#temperature"},"temperature"),". For how to set up these input types, see the following sections."),(0,i.kt)("h3",{id:"string"},"String"),(0,i.kt)("p",null," The following example shows the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a text box for parameter input."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n   ...\n   "configs": [ \n       {\n           "name": "config1",\n           "params": [\n               {\n                   "name": "stringParam",\n                   "displayType": "string",                \n                   "required": false,\n                   ...\n               },\n               ...\n           ],\n           ...\n       }\n   ],\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card displays as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"config-display-type-string",src:t(6865).Z,width:"584",height:"314"})),(0,i.kt)("p",null,"When a configuration is set up, ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginConfigUpdate")," carries a ",(0,i.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,i.kt)("inlineCode",{parentName:"p"},'"value"')," from the parameter input."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',title:'"v2/notifyPluginConfigUpdate.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "stringParam",\n                                "value": "foo"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n\n')),(0,i.kt)("h3",{id:"datetime"},"Datetime"),(0,i.kt)("p",null,"The following example shows the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a date/time picker for parameter input. You must define ",(0,i.kt)("inlineCode",{parentName:"p"},'"displayFormat"')," by using one of the following formats:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"YYYY-MM-DD"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"HH:MM"')," "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"YYYY-MM-DD HH:MM"'))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "configs": [ \n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "datetimeParam",\n                    "displayType": "datetime",                \n                    "displayFormat": "HH:MM",\n                    "required": false,\n                    ...\n                },\n                ...\n            ],\n            ...\n        }\n    ],\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card displays as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"config-display-type-datetime",src:t(9662).Z,width:"588",height:"310"})),(0,i.kt)("p",null,"When a configuration is enabled, ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginConfigUpdate")," carries a ",(0,i.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,i.kt)("inlineCode",{parentName:"p"},'"value"')," that follows the ",(0,i.kt)("inlineCode",{parentName:"p"},'"displayFormat"')," defined in the ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',title:'"v2/notifyPluginConfigUpdate.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "datetimeParam",\n                                "value": "06:00"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The time parameter to be sent is not a timestamp and does not contain any time zone information. The plugin executes the command of datetime parameter according to the device's time zone.")),(0,i.kt)("h3",{id:"switch"},"Switch"),(0,i.kt)("p",null,"The following example shows the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a switch toggle for parameter input. The switch toggle is used to switch between two parameters. You must define ",(0,i.kt)("inlineCode",{parentName:"p"},'"displayValues"')," as a size 2 Array, with index 0 representing false and index 1 representing true. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "configs": [ \n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "switchParam",\n                    "displayType": "switch",                \n                    "displayValues": [\n                        "offValue",\n                        "onValue"\n                    ],\n                    "defaultValue": "offValue",\n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card displays as follows:\n",(0,i.kt)("img",{alt:"config-display-type-switch",src:t(922).Z,width:"587",height:"310"})),(0,i.kt)("p",null,"When a configuration is set up, ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginConfigUpdate")," carries a ",(0,i.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,i.kt)("inlineCode",{parentName:"p"},'"value"')," that follows the ",(0,i.kt)("inlineCode",{parentName:"p"},'"displayValues"')," defined in the ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',title:'"v2/notifyPluginConfigUpdate.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "switchParam",\n                                "value": "offValue"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n')),(0,i.kt)("h3",{id:"checkbox"},"Checkbox"),(0,i.kt)("p",null,"The following example shows the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a checkbox for parameter input. The checkbox is used to enable or disable the parameter. You must define ",(0,i.kt)("inlineCode",{parentName:"p"},'"displayValues"')," as a size 2 Array, with index 0 representing false and index 1 representing true. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "configs": [ \n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "checkboxParam",\n                    "displayType": "checkbox",                \n                    "displayValues": [\n                        "offValue",\n                        "onValue"\n                    ],\n                    "defaultValue": "offValue",\n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card displays as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"config-display-type-checkbox",src:t(9637).Z,width:"590",height:"320"})),(0,i.kt)("p",null,"When a configuration is set up, ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginConfigUpdate")," carries a ",(0,i.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,i.kt)("inlineCode",{parentName:"p"},'"value"')," that follows the ",(0,i.kt)("inlineCode",{parentName:"p"},'"displayValues"')," defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',title:'"v2/notifyPluginConfigUpdate.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "checkboxParam",\n                                "value": "offValue"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n')),(0,i.kt)("h3",{id:"list"},"List"),(0,i.kt)("p",null,"The following example shows the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a dropdown list for parameter input. You must define ",(0,i.kt)("inlineCode",{parentName:"p"},'"displayValues"')," as the ",(0,i.kt)("strong",{parentName:"p"},"Array")," type."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "configs": [ \n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "listParam",\n                    "displayType": "list",                \n                    "displayValues": [\n                        "list1",\n                        "list2"\n                    ],\n                    "defaultValue": "list1",\n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card displays as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"config-display-type-list",src:t(1611).Z,width:"581",height:"312"})),(0,i.kt)("p",null,"When a configuration is set up, ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginConfigUpdate")," carries a ",(0,i.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,i.kt)("inlineCode",{parentName:"p"},'"value"')," that follows the ",(0,i.kt)("inlineCode",{parentName:"p"},'"displayValues"')," defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',title:'"v2/notifyPluginConfigUpdate.json"'},'{\n   "jsonrpc": "2.0",\n   "method": "v2/notifyPluginConfigUpdate",\n   ...\n       ...\n           ...\n               "configs": [\n                   {\n                       "name": "config1",\n                       "params": [\n                           {\n                               "name": "listParam",\n                               "value": "list1"\n                           }\n                           ...\n                       ]\n                       ...\n                   }\n                   ...\n               ]\n}\n')),(0,i.kt)("h3",{id:"temperature"},"Temperature"),(0,i.kt)("p",null,"The following example shows the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"v2/notifyPluginUpdate.json")," for displaying a predefined temperature scale for parameter input. Users can enter temperature parameters in Fahrenheit or Celsius."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',title:'"v2/notifyPluginUpdate.json"'},'{\n    ...\n    "configs": [ \n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "temperatureParam",\n                    "displayType": "temperature",                \n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Configs")," card displays as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"config-display-type-temperature",src:t(8959).Z,width:"584",height:"313"})),(0,i.kt)("p",null,"When a configuration is set up, ",(0,i.kt)("inlineCode",{parentName:"p"},'"v2/notifyPluginConfigUpdate"')," carries a ",(0,i.kt)("inlineCode",{parentName:"p"},'"name"')," and a ",(0,i.kt)("inlineCode",{parentName:"p"},'"value"')," from the temperature parameter input. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',title:'"v2/notifyPluginConfigUpdate.json"'},'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "temperatureParam",\n                                "value": "301.15"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"While the Fahrenheit and Celsius scales are used on the Portal, the temperature data sent to the plugin needs to be in ",(0,i.kt)("strong",{parentName:"p"},"Kelvin"),".")))}m.isMDXComponent=!0},9637:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-display-type-checkbox-06216ce94948bcf89e9b3354e64d1522.png"},9662:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-display-type-datetime-fb1e9cd66f2313be453d471fa70acf87.png"},1611:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-display-type-list-539739773070e1f59b9580f8ec86a085.png"},6865:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-display-type-string-4942ae7a2c87b6e41f85ad97b2bd55b0.png"},922:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-display-type-switch-839830a854b954683a1413da97114b32.png"},8959:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-display-type-temperature-2a186b35064ed380acb9dc87118f664c.png"},8152:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-init-faaa0b12c9e83676e1acfb2d645c74e4.svg"},7499:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-sequence-de8f5182fafca0c3c52f9d787b282b39.svg"},2421:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-set-finished-03ca8c249b1c3e5600c840b083aa3f27.png"},3568:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/config-set-param-6c41ee1519e67c7609c58c95bc8d64d4.svg"}}]);